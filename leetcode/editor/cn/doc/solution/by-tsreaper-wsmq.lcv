## 解法：分类讨论

按每种任务的数量分类讨论：
* 若这种任务只有 $1$ 个，则无法完成；
* 若这种任务只有 $2$ 个，可以一次完成；
* 若这种任务数量是 $3$ 的倍数，显然每次完成 $3$ 个是最快的；
* 若这种任务数量除 $3$ 余 $1$，需要每次完成 $3$ 个，最后 $4$ 个分两次完成；
* 若这种任务数量除 $3$ 余 $2$，需要每次完成 $3$ 个，最后完成 $2$ 个。

## 参考代码（c++）

* c++

```c++
class Solution {
public:
    int minimumRounds(vector<int>& tasks) {
        map<int, int> cnt;
        for (int x : tasks) cnt[x]++;
        int ans = 0;
        for (auto it = cnt.begin(); it != cnt.end(); it++) {
            int x = it->second;
            if (x == 1) return -1;
            else if (x == 2) ans++;
            else if (x % 3 == 0) ans += x / 3;
            else ans += x / 3 + 1;
        }
        return ans;
    }
};
```

