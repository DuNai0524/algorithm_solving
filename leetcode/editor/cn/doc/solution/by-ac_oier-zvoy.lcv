## 模拟

根据题意进行模拟即可。

从前往后处理每个 $data[i]$，先统计 $data[i]$ 从第 $7$ 位开始往后有多少位连续的 $1$，代表这是一个几字节的字符，记为 $cnt$ ：

* 如果 $cnt$ 为 $1$ 或者大于 $4$ 均违反编码规则（与字符长度为 $1$ 时的编码规则 和 字符长度只能是 $1$ 到 $4$ 冲突），返回 `False`；
* 如果位置 $i$ 后面不足 $cnt - 1$ 也返回 `False`；
* 否则检查下标范围为 $[i + 1, i + cnt - 1]$ 的数是否满足前两位为 $10$ 的要求，若不满足返回 `False`。

如果上述过程满足要求，跳到下一个检查点进行检查，整个 `data` 都没有冲突则返回 `True`。

代码：

* []

```Java
class Solution {
    public boolean validUtf8(int[] data) {
        int n = data.length;
        for (int i = 0; i < n; ) {
            int t = data[i], j = 7;
            while (j >= 0 && (((t >> j) & 1) == 1)) j--;
            int cnt = 7 - j;
            if (cnt == 1 || cnt > 4) return false;
            if (i + cnt - 1 >= n) return false;
            for (int k = i + 1; k < i + cnt; k++) {
                if ((((data[k] >> 7) & 1) == 1) && (((data[k] >> 6) & 1) == 0)) continue;
                return false;
            }
            if (cnt == 0) i++;
            else i += cnt;
        }
        return true;
    }
}
```

* 时间复杂度：$O(n)$
* 空间复杂度：$O(1)$

---

## 最后

**如果有帮助到你，请给题解点个赞和收藏，让更多的人看到 ~ ("▔□▔)/**

也欢迎你 [关注我](https://oscimg.oschina.net/oscnet/up-19688dc1af05cf8bdea43b2a863038ab9e5.png) 和 加入我们的[「组队打卡」](https://leetcode-cn.com/u/ac_oier/)小群 ，提供写「证明」&「思路」的高质量题解。

所有题解已经加入 [刷题指南](https://github.com/SharingSource/LogicStack-LeetCode/wiki)，欢迎 star 哦 ~
