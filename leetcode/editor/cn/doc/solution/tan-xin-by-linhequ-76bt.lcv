> Problem: [334. 递增的三元子序列](https://leetcode.cn/problems/increasing-triplet-subsequence/description/)

[TOC]

# 思路

> 借鉴300.最长递增子序列的贪心思路,让上升序列上升得尽可能慢,因为只要长度为3的,所以用两个变量就可以搞定了

# 解题方法

> 用a表示长度为1的递增序列的最后一个元素能取得的最小的值
> 用b表示长度为2的递增序列的最后一个元素能取得的最小值
> 如果某个时刻 nums[i]>b那么就有3个了 遍历的同时不断更新a和b 关键是要让a和b尽可能的小!!!

# Code

* []

```Java
class Solution {
    public boolean increasingTriplet(int[] nums) {
        int a = nums[0], b = Integer.MAX_VALUE;
        int len = nums.length;
        for (int i = 1; i < len; i++) {
            if (nums[i] > b) {
                return true;
            }
            if (nums[i] > a) {
                b = Math.min(nums[i], b);
            } else {
                a = nums[i];
            }
        }
        return false;
    }
}
```

