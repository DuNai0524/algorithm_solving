UTF-8 中的一个字符可能的长度为 1 到 4 字节,因此只判断编码中的前1-5bits value.

简单的来说可以分为5种情况:

首字节（4种情况）：0xxxxxxx, 110xxxxx, 1110xxxx, 11110xxx, 后面字节（1种情况）：10xxxxxx

只需要对这5种情况分别进行讨论我们便知道所给的编码是否合法.

判断时采用右移法

* cpp

```cpp
class Solution {
public:
    bool validUtf8(vector<int>& data) {
        int bitIndex = 0;//用于判断data首字节后一共有几个字节
        for(const int num : data) {
            if(bitIndex == 0) {
                if((num >> 5) == 0b110) bitIndex = 1;
                else if((num >> 4) == 0b1110) bitIndex = 2;
                else if((num >> 3) == 0b11110) bitIndex = 3;
                else if(num >> 7) return false;
            } else {
                if((num >> 6) != 0b10) return false;
                --bitIndex;
            }
        }
        return bitIndex == 0;
    }
};

```

